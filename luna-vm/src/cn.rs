//! VM Constants
//!
//! These constants are defined here as they are in the Lua source code.
//! See `lopcodes.h` and `lopcodes.c` for more.

use crate::ops::code::OpCodeId;

pub const OP_MOVE: OpCodeId = 0;
pub const OP_LOADI: OpCodeId = 1;
pub const OP_LOADF: OpCodeId = 2;
pub const OP_LOADK: OpCodeId = 3;
pub const OP_LOADKX: OpCodeId = 4;
pub const OP_LOADFALSE: OpCodeId = 5;
pub const OP_LFALSESKIP: OpCodeId = 6;
pub const OP_LOADTRUE: OpCodeId = 7;
pub const OP_LOADNIL: OpCodeId = 8;
pub const OP_GETUPVAL: OpCodeId = 9;
pub const OP_SETUPVAL: OpCodeId = 10;
pub const OP_GETTABUP: OpCodeId = 11;
pub const OP_GETTABLE: OpCodeId = 12;
pub const OP_GETI: OpCodeId = 13;
pub const OP_GETFIELD: OpCodeId = 14;
pub const OP_SETTABUP: OpCodeId = 15;
pub const OP_SETTABLE: OpCodeId = 16;
pub const OP_SETI: OpCodeId = 17;
pub const OP_SETFIELD: OpCodeId = 18;
pub const OP_NEWTABLE: OpCodeId = 19;
pub const OP_ISELF: OpCodeId = 20;
pub const OP_ADDI: OpCodeId = 21;
pub const OP_ADDK: OpCodeId = 22;
pub const OP_SUBK: OpCodeId = 23;
pub const OP_MULK: OpCodeId = 24;
pub const OP_MODK: OpCodeId = 25;
pub const OP_POWK: OpCodeId = 26;
pub const OP_DIVK: OpCodeId = 27;
pub const OP_IDIVK: OpCodeId = 28;
pub const OP_BANDK: OpCodeId = 29;
pub const OP_BORK: OpCodeId = 30;
pub const OP_BXORK: OpCodeId = 31;
pub const OP_SHRI: OpCodeId = 32;
pub const OP_SHLI: OpCodeId = 33;
pub const OP_ADD: OpCodeId = 34;
pub const OP_SUB: OpCodeId = 35;
pub const OP_MUL: OpCodeId = 36;
pub const OP_MOD: OpCodeId = 37;
pub const OP_POW: OpCodeId = 38;
pub const OP_DIV: OpCodeId = 39;
pub const OP_IDIV: OpCodeId = 40;
pub const OP_BAND: OpCodeId = 41;
pub const OP_BOR: OpCodeId = 42;
pub const OP_BXOR: OpCodeId = 43;
pub const OP_SHL: OpCodeId = 44;
pub const OP_SHR: OpCodeId = 45;
pub const OP_MMBIN: OpCodeId = 46;
pub const OP_MMBINI: OpCodeId = 47;
pub const OP_MMBINK: OpCodeId = 48;
pub const OP_UNM: OpCodeId = 49;
pub const OP_BNOT: OpCodeId = 50;
pub const OP_NOT: OpCodeId = 51;
pub const OP_LEN: OpCodeId = 52;
pub const OP_CONCAT: OpCodeId = 53;
pub const OP_CLOSE: OpCodeId = 54;
pub const OP_TBC: OpCodeId = 55;
pub const OP_JMP: OpCodeId = 56;
pub const OP_EQ: OpCodeId = 57;
pub const OP_LT: OpCodeId = 58;
pub const OP_LE: OpCodeId = 59;
pub const OP_EQK: OpCodeId = 60;
pub const OP_EQI: OpCodeId = 61;
pub const OP_LTI: OpCodeId = 62;
pub const OP_LEI: OpCodeId = 63;
pub const OP_GTI: OpCodeId = 64;
pub const OP_GEI: OpCodeId = 65;
pub const OP_TEST: OpCodeId = 66;
pub const OP_TESTSET: OpCodeId = 67;
pub const OP_CALL: OpCodeId = 68;
pub const OP_TAILCALL: OpCodeId = 69;
pub const OP_RETURN: OpCodeId = 70;
pub const OP_RETURN0: OpCodeId = 71;
pub const OP_RETURN1: OpCodeId = 72;
pub const OP_FORLOOP: OpCodeId = 73;
pub const OP_FORPREP: OpCodeId = 74;
pub const OP_TFORPREP: OpCodeId = 75;
pub const OP_TFORCALL: OpCodeId = 76;
pub const OP_TFORLOOP: OpCodeId = 77;
pub const OP_SETLIST: OpCodeId = 78;
pub const OP_CLOSURE: OpCodeId = 79;
pub const OP_VARARG: OpCodeId = 80;
pub const OP_VARARGPREP: OpCodeId = 81;
pub const OP_EXTRAARG: OpCodeId = 82;

pub const FMT_ABC: u8 = 0;
pub const FMT_ABX: u8 = 1;
pub const FMT_ASBX: u8 = 2;
pub const FMT_AX: u8 = 3;
pub const FMT_ISJ: u8 = 4;

pub const SIZE_A: u8 = 8;
pub const SIZE_B: u8 = 8;
pub const SIZE_C: u8 = 8;
pub const SIZE_BX: u8 = SIZE_B + SIZE_C + 1;
pub const SIZE_AX: u8 = SIZE_A + SIZE_BX;
pub const SIZE_SJ: u8 = SIZE_A + SIZE_BX;
pub const SIZE_OP: u8 = 7;

pub const POS_OP: u8 = 0;
pub const POS_A: u8 = POS_OP + SIZE_OP;
pub const POS_K: u8 = POS_A + SIZE_A;
pub const POS_B: u8 = POS_K + 1;
pub const POS_C: u8 = POS_B + SIZE_B;
pub const POS_BX: u8 = POS_K;
pub const POS_AX: u8 = POS_A;
pub const POS_SJ: u8 = POS_A;
