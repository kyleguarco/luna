//! VM Constants
//!
//! These constants are defined here as they are in the Lua source code.
//! See `lopcodes.h` and `lopcodes.c` for more.

pub const OP_MOVE: u8 = 0;
pub const OP_LOADI: u8 = 1;
pub const OP_LOADF: u8 = 2;
pub const OP_LOADK: u8 = 3;
pub const OP_LOADKX: u8 = 4;
pub const OP_LOADFALSE: u8 = 5;
pub const OP_LFALSESKIP: u8 = 6;
pub const OP_LOADTRUE: u8 = 7;
pub const OP_LOADNIL: u8 = 8;
pub const OP_GETUPVAL: u8 = 9;
pub const OP_SETUPVAL: u8 = 10;
pub const OP_GETTABUP: u8 = 11;
pub const OP_GETTABLE: u8 = 12;
pub const OP_GETI: u8 = 13;
pub const OP_GETFIELD: u8 = 14;
pub const OP_SETTABUP: u8 = 15;
pub const OP_SETTABLE: u8 = 16;
pub const OP_SETI: u8 = 17;
pub const OP_SETFIELD: u8 = 18;
pub const OP_NEWTABLE: u8 = 19;
pub const OP_ISELF: u8 = 20;
pub const OP_ADDI: u8 = 21;
pub const OP_ADDK: u8 = 22;
pub const OP_SUBK: u8 = 23;
pub const OP_MULK: u8 = 24;
pub const OP_MODK: u8 = 25;
pub const OP_POWK: u8 = 26;
pub const OP_DIVK: u8 = 27;
pub const OP_IDIVK: u8 = 28;
pub const OP_BANDK: u8 = 29;
pub const OP_BORK: u8 = 30;
pub const OP_BXORK: u8 = 31;
pub const OP_SHRI: u8 = 32;
pub const OP_SHLI: u8 = 33;
pub const OP_ADD: u8 = 34;
pub const OP_SUB: u8 = 35;
pub const OP_MUL: u8 = 36;
pub const OP_MOD: u8 = 37;
pub const OP_POW: u8 = 38;
pub const OP_DIV: u8 = 39;
pub const OP_IDIV: u8 = 40;
pub const OP_BAND: u8 = 41;
pub const OP_BOR: u8 = 42;
pub const OP_BXOR: u8 = 43;
pub const OP_SHL: u8 = 44;
pub const OP_SHR: u8 = 45;
pub const OP_MMBIN: u8 = 46;
pub const OP_MMBINI: u8 = 47;
pub const OP_MMBINK: u8 = 48;
pub const OP_UNM: u8 = 49;
pub const OP_BNOT: u8 = 50;
pub const OP_NOT: u8 = 51;
pub const OP_LEN: u8 = 52;
pub const OP_CONCAT: u8 = 53;
pub const OP_CLOSE: u8 = 54;
pub const OP_TBC: u8 = 55;
pub const OP_JMP: u8 = 56;
pub const OP_EQ: u8 = 57;
pub const OP_LT: u8 = 58;
pub const OP_LE: u8 = 59;
pub const OP_EQK: u8 = 60;
pub const OP_EQI: u8 = 61;
pub const OP_LTI: u8 = 62;
pub const OP_LEI: u8 = 63;
pub const OP_GTI: u8 = 64;
pub const OP_GEI: u8 = 65;
pub const OP_TEST: u8 = 66;
pub const OP_TESTSET: u8 = 67;
pub const OP_CALL: u8 = 68;
pub const OP_TAILCALL: u8 = 69;
pub const OP_RETURN: u8 = 70;
pub const OP_RETURN0: u8 = 71;
pub const OP_RETURN1: u8 = 72;
pub const OP_FORLOOP: u8 = 73;
pub const OP_FORPREP: u8 = 74;
pub const OP_TFORPREP: u8 = 75;
pub const OP_TFORCALL: u8 = 76;
pub const OP_TFORLOOP: u8 = 77;
pub const OP_SETLIST: u8 = 78;
pub const OP_CLOSURE: u8 = 79;
pub const OP_VARARG: u8 = 80;
pub const OP_VARARGPREP: u8 = 81;
pub const OP_EXTRAARG: u8 = 82;

pub const FMT_ABC: u8 = 0;
pub const FMT_ABX: u8 = 1;
pub const FMT_ASBX: u8 = 2;
pub const FMT_AX: u8 = 3;
pub const FMT_ISJ: u8 = 4;

pub const SIZE_A: u8 = 8;
pub const SIZE_B: u8 = 8;
pub const SIZE_C: u8 = 8;
pub const SIZE_BX: u8 = SIZE_B + SIZE_C + 1;
pub const SIZE_AX: u8 = SIZE_A + SIZE_BX;
pub const SIZE_SJ: u8 = SIZE_A + SIZE_BX;
pub const SIZE_OP: u8 = 7;

pub const POS_OP: u8 = 0;
pub const POS_A: u8 = POS_OP + SIZE_OP;
pub const POS_K: u8 = POS_A + SIZE_A;
pub const POS_B: u8 = POS_K + 1;
pub const POS_C: u8 = POS_B + SIZE_B;
pub const POS_BX: u8 = POS_K;
pub const POS_AX: u8 = POS_A;
pub const POS_SJ: u8 = POS_A;
